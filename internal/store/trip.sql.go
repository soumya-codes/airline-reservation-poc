// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: trip.sql

package store

import (
	"context"
)

const getNextAvailableTrip = `-- name: GetNextAvailableTrip :one
SELECT id FROM trip WHERE completed = FALSE ORDER BY schedule LIMIT 1 FOR UPDATE SKIP LOCKED
`

func (q *Queries) GetNextAvailableTrip(ctx context.Context) (int32, error) {
	row := q.db.QueryRow(ctx, getNextAvailableTrip)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const markTripForBooking = `-- name: MarkTripForBooking :one
UPDATE trip SET completed = TRUE WHERE id = $1 RETURNING 1
`

func (q *Queries) MarkTripForBooking(ctx context.Context, id int32) (int32, error) {
	row := q.db.QueryRow(ctx, markTripForBooking, id)
	var column_1 int32
	err := row.Scan(&column_1)
	return column_1, err
}
